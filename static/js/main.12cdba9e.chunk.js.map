{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","keyUpHandler","event","setState","key","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAYaA,EAAb,4MACEC,MAAyB,CACvBC,WAAY,MAFhB,EAaEC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEH,WAAYE,EAAME,OAdtC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,gBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,gBAV/C,oBAiBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,qBAAKS,UAAU,MAAf,SAEIT,EAEI,oBAAGS,UAAU,eAAb,sCAGGT,EAHH,OAOA,mBAAGS,UAAU,eAAb,2CAhCd,GAAyBC,a,MCPzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.12cdba9e.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport const App1: React.FC = () => (\n  <div className=\"App\">\n    <p className=\"App__message\">The last pressed key is [Enter]</p>\n  </div>\n);\n\ntype State = {\n  pressedKey: string | null;\n};\n\nexport class App extends Component {\n  state: Readonly<State> = {\n    pressedKey: null,\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.keyUpHandler);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.keyUpHandler);\n  }\n\n  keyUpHandler = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: event.key });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        {\n          pressedKey\n            ? (\n              <p className=\"App__message\">\n                The last pressed key is\n                [\n                {pressedKey}\n                ]\n              </p>\n            )\n            : <p className=\"App__message\">Nothing was pressed yet</p>\n        }\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}